(function(c){var d={init:function(a){return this.each(function(){var j=c(this);j.data("uploadifive",{inputs:{},inputCount:0,fileID:0,queue:{count:0,selected:0,replaced:0,errors:0,queued:0,cancelled:0},uploads:{current:0,attempts:0,successful:0,errors:0,count:0}});var m=j.data("uploadifive");var k=m.settings=c.extend({auto:true,buttonClass:false,buttonText:"Select Files",checkScript:false,dnd:true,dropTarget:false,fileObjName:"Filedata",fileSizeLimit:0,fileType:false,formData:{},height:30,itemTemplate:false,method:"post",multi:true,overrideEvents:[],queueID:false,queueSizeLimit:0,removeCompleted:false,simUploadLimit:0,truncateLength:0,uploadLimit:0,uploadScript:"uploadifive.php",width:100},a);if(isNaN(k.fileSizeLimit)){var l=parseInt(k.fileSizeLimit)*1.024;if(k.fileSizeLimit.indexOf("KB")>-1){k.fileSizeLimit=l*1000}else{if(k.fileSizeLimit.indexOf("MB")>-1){k.fileSizeLimit=l*1000000}else{if(k.fileSizeLimit.indexOf("GB")>-1){k.fileSizeLimit=l*1000000000}}}}else{k.fileSizeLimit=k.fileSizeLimit*1024}m.inputTemplate=c('<input type="file">').css({"font-size":k.height+"px",opacity:0,position:"absolute",right:"-3px",top:"-3px","z-index":999});m.createInput=function(){var f=m.inputTemplate.clone();var e=f.name="input"+m.inputCount++;if(k.multi){f.attr("multiple",true)}if(k.fileType){f.attr("accept",k.fileType)}f.bind("change",function(){m.queue.selected=0;m.queue.replaced=0;m.queue.errors=0;m.queue.queued=0;var h=this.files.length;m.queue.selected=h;if((m.queue.count+h)>k.queueSizeLimit&&k.queueSizeLimit!==0){if(c.inArray("onError",k.overrideEvents)<0){alert("The maximum number of queue items has been reached ("+k.queueSizeLimit+").  Please select fewer files.")}if(typeof k.onError==="function"){k.onError.call(j,"QUEUE_LIMIT_EXCEEDED")}}else{for(var g=0;g<h;g++){file=this.files[g];m.addQueueItem(file)}m.inputs[e]=this;m.createInput()}if(k.auto){d.upload.call(j)}if(typeof k.onSelect==="function"){k.onSelect.call(j,m.queue)}});if(m.currentInput){m.currentInput.hide()}m.button.append(f);m.currentInput=f};m.destroyInput=function(e){c(m.inputs[e]).remove();delete m.inputs[e];m.inputCount--};m.drop=function(e){m.queue.selected=0;m.queue.replaced=0;m.queue.errors=0;m.queue.queued=0;var f=e.dataTransfer;var g=f.name="input"+m.inputCount++;var h=f.files.length;m.queue.selected=h;if((m.queue.count+h)>k.queueSizeLimit&&k.queueSizeLimit!==0){if(c.inArray("onError",k.overrideEvents)<0){alert("The maximum number of queue items has been reached ("+k.queueSizeLimit+").  Please select fewer files.")}if(typeof k.onError==="function"){k.onError.call(j,"QUEUE_LIMIT_EXCEEDED")}}else{for(var n=0;n<h;n++){file=f.files[n];m.addQueueItem(file)}m.inputs[g]=f}if(k.auto){d.upload.call(j)}if(typeof k.onDrop==="function"){k.onDrop.call(j,f.files,f.files.length)}e.preventDefault();e.stopPropagation()};m.fileExistsInQueue=function(f){for(var g in m.inputs){input=m.inputs[g];limit=input.files.length;for(var e=0;e<limit;e++){existingFile=input.files[e];if(existingFile.name==f.name&&!existingFile.complete){return true}}}return false};m.removeExistingFile=function(f){for(var g in m.inputs){input=m.inputs[g];limit=input.files.length;for(var e=0;e<limit;e++){existingFile=input.files[e];if(existingFile.name==f.name&&!existingFile.complete){m.queue.replaced++;d.cancel.call(j,existingFile,true)}}}};if(k.itemTemplate==false){m.queueItem=c('<div class="uploadifive-queue-item">                        <a class="close" href="#">X</a>                        <div><span class="filename"></span><span class="fileinfo"></span></div>                        <div class="progress">                            <div class="progress-bar"></div>                        </div>                    </div>')}else{m.queueItem=c(k.itemTemplate)}m.addQueueItem=function(f){if(c.inArray("onAddQueueItem",k.overrideEvents)<0){m.removeExistingFile(f);f.queueItem=m.queueItem.clone();f.queueItem.attr("id",k.id+"-file-"+m.fileID++);f.queueItem.find(".close").bind("click",function(){d.cancel.call(j,f);return false});var e=f.name;if(e.length>k.truncateLength&&k.truncateLength!=0){e=e.substring(0,k.truncateLength)+"..."}f.queueItem.find(".filename").html(e);f.queueItem.data("file",f);m.queueEl.append(f.queueItem)}if(typeof k.onAddQueueItem==="function"){k.onAddQueueItem.call(j,f)}if(f.size>k.fileSizeLimit&&k.fileSizeLimit!=0){m.error("FILE_SIZE_LIMIT_EXCEEDED",f)}else{m.queue.queued++;m.queue.count++}};m.removeQueueItem=function(e,f,g){if(!g){g=0}var h=f?0:500;if(e.queueItem){if(e.queueItem.find(".fileinfo").html()!=" - Completed"){e.queueItem.find(".fileinfo").html(" - Cancelled")}e.queueItem.find(".progress-bar").width(0);e.queueItem.delay(g).fadeOut(h,function(){c(this).remove()});delete e.queueItem;m.queue.count--}};m.filesToUpload=function(){var f=0;for(var g in m.inputs){input=m.inputs[g];limit=input.files.length;for(var e=0;e<limit;e++){file=input.files[e];if(!file.skip&&!file.complete){f++}}}return f};m.checkExists=function(e){if(c.inArray("onCheck",k.overrideEvents)<0){c.ajaxSetup({async:false});var f=c.extend(k.formData,{filename:e.name});c.post(k.checkScript,f,function(g){e.exists=parseInt(g)});if(e.exists){if(!confirm("A file named "+e.name+" already exists in the upload folder.\nWould you like to replace it?")){d.cancel.call(j,e);return true}}}if(typeof k.onCheck==="function"){k.onCheck.call(j,e,e.exists)}return false};m.uploadFile=function(g,f){if(!g.skip&&!g.complete&&!g.uploading){g.uploading=true;m.uploads.current++;m.uploads.attempted++;xhr=g.xhr=new XMLHttpRequest();if(typeof FormData==="function"||typeof FormData==="object"){var e=new FormData();e.append(k.fileObjName,g);for(i in k.formData){e.append(i,k.formData[i])}xhr.open(k.method,k.uploadScript,true);xhr.upload.addEventListener("progress",function(o){if(o.lengthComputable){m.progress(o,g)}},false);xhr.addEventListener("load",function(o){if(this.readyState==4){g.uploading=false;if(this.status==200){if(g.xhr.responseText!=="Invalid file type."){m.uploadComplete(o,g,f)}else{m.error(g.xhr.responseText,g,f)}}else{if(this.status==404){m.error("404_FILE_NOT_FOUND",g,f)}else{if(this.status==403){m.error("403_FORBIDDEN",g,f)}else{m.error("Unknown Error",g,f)}}}}});xhr.send(e)}else{var h=new FileReader();h.onload=function(x){var u="-------------------------"+(new Date).getTime(),y="--",z="\r\n",v="";v+=y+u+z;v+='Content-Disposition: form-data; name="'+k.fileObjName+'"';if(g.name){v+='; filename="'+g.name+'"'}v+=z;v+="Content-Type: application/octet-stream"+z+z;v+=x.target.result+z;for(key in k.formData){v+=y+u+z;v+='Content-Disposition: form-data; name="'+key+'"'+z+z;v+=k.formData[key]+z}v+=y+u+y+z;xhr.upload.addEventListener("progress",function(n){m.progress(n,g)},false);xhr.addEventListener("load",function(n){g.uploading=false;var o=this.status;if(o==404){m.error("404_FILE_NOT_FOUND",g,f)}else{if(g.xhr.responseText!="Invalid file type."){m.uploadComplete(n,g,f)}else{m.error(g.xhr.responseText,g,f)}}},false);var A=k.uploadScript;if(k.method=="get"){var w=c(k.formData).param();A+=w}xhr.open(k.method,k.uploadScript,true);xhr.setRequestHeader("Content-Type","multipart/form-data; boundary="+u);if(typeof k.onUploadFile==="function"){k.onUploadFile.call(j,g)}xhr.sendAsBinary(v)};h.readAsBinaryString(g)}}};m.progress=function(e,g){if(c.inArray("onProgress",k.overrideEvents)<0){if(e.lengthComputable){var f=Math.round((e.loaded/e.total)*100)}g.queueItem.find(".fileinfo").html(" - "+f+"%");g.queueItem.find(".progress-bar").css("width",f+"%")}if(typeof k.onProgress==="function"){k.onProgress.call(j,g,e)}};m.error=function(e,g,f){if(c.inArray("onError",k.overrideEvents)<0){switch(e){case"404_FILE_NOT_FOUND":errorMsg="404 Error";break;case"403_FORBIDDEN":errorMsg="403 Forbidden";break;case"FORBIDDEN_FILE_TYPE":errorMsg="Forbidden File Type";break;case"FILE_SIZE_LIMIT_EXCEEDED":errorMsg="File Too Large";break;default:errorMsg="Unknown Error";break}g.queueItem.addClass("error").find(".fileinfo").html(" - "+errorMsg);g.queueItem.find(".progress").remove()}if(typeof k.onError==="function"){k.onError.call(j,e,g)}g.skip=true;if(e=="404_FILE_NOT_FOUND"){m.uploads.errors++}else{m.queue.errors++}if(f){d.upload.call(j,null,true)}};m.uploadComplete=function(e,g,f){if(c.inArray("onUploadComplete",k.overrideEvents)<0){g.queueItem.find(".progress-bar").css("width","100%");g.queueItem.find(".fileinfo").html(" - Completed");g.queueItem.find(".progress").slideUp(250);g.queueItem.addClass("complete")}if(typeof k.onUploadComplete==="function"){k.onUploadComplete.call(j,g,g.xhr.responseText)}if(k.removeCompleted){setTimeout(function(){d.cancel.call(j,g)},3000)}g.complete=true;m.uploads.successful++;m.uploads.count++;m.uploads.current--;delete g.xhr;if(f){d.upload.call(j,null,true)}};m.queueComplete=function(){if(typeof k.onQueueComplete==="function"){k.onQueueComplete.call(j,m.uploads)}};if(window.File&&window.FileList&&window.Blob&&(window.FileReader||window.FormData)){k.id="uploadifive-"+j.attr("id");m.button=c('<div id="'+k.id+'" class="uploadifive-button">'+k.buttonText+"</div>");if(k.buttonClass){m.button.addClass(k.buttonClass)}m.button.css({height:k.height,"line-height":k.height+"px",overflow:"hidden",position:"relative","text-align":"center",width:k.width});j.before(m.button).appendTo(m.button).hide();m.createInput.call(j);if(!k.queueID){k.queueID=k.id+"-queue";m.queueEl=c('<div id="'+k.queueID+'" class="uploadifive-queue" />');m.button.after(m.queueEl)}else{m.queueEl=c("#"+k.queueID)}if(k.dnd){var b=k.dropTarget?c(k.dropTarget):m.queueEl.get(0);b.addEventListener("dragleave",function(e){e.preventDefault();e.stopPropagation()},false);b.addEventListener("dragenter",function(e){e.preventDefault();e.stopPropagation()},false);b.addEventListener("dragover",function(e){e.preventDefault();e.stopPropagation()},false);b.addEventListener("drop",m.drop,false)}if(!XMLHttpRequest.prototype.sendAsBinary){XMLHttpRequest.prototype.sendAsBinary=function(g){function f(o){return o.charCodeAt(0)&255}var e=Array.prototype.map.call(g,f);var h=new Uint8Array(e);this.send(h.buffer)}}if(typeof k.onInit==="function"){k.onInit.call(j)}}else{if(typeof k.onFallback==="function"){k.onFallback.call(j)}return false}})},debug:function(){return this.each(function(){console.log(c(this).data("uploadifive"))})},clearQueue:function(){this.each(function(){var a=c(this),h=a.data("uploadifive"),b=h.settings;for(var g in h.inputs){input=h.inputs[g];limit=input.files.length;for(i=0;i<limit;i++){file=input.files[i];d.cancel.call(a,file)}}if(typeof b.onClearQueue==="function"){b.onClearQueue.call(a,c("#"+h.settings.queueID))}})},cancel:function(a,b){this.each(function(){var h=c(this),k=h.data("uploadifive"),j=k.settings;if(typeof a==="string"){if(!isNaN(a)){fileID="uploadifive-"+c(this).attr("id")+"-file-"+a}a=c("#"+fileID).data("file")}a.skip=true;k.filesCancelled++;if(a.uploading){k.uploads.current--;a.uploading=false;a.xhr.abort();delete a.xhr;d.upload.call(h)}if(c.inArray("onCancel",j.overrideEvents)<0){k.removeQueueItem(a,b)}if(typeof j.onCancel==="function"){j.onCancel.call(h,a)}})},upload:function(b,a){this.each(function(){var j=c(this),m=j.data("uploadifive"),l=m.settings;if(b){m.uploadFile.call(j,b)}else{if((m.uploads.count+m.uploads.current)<l.uploadLimit||l.uploadLimit==0){if(!a){m.uploads.attempted=0;m.uploads.successsful=0;m.uploads.errors=0;var k=m.filesToUpload();if(typeof l.onUpload==="function"){l.onUpload.call(j,k)}}c("#"+l.queueID).find(".uploadifive-queue-item").not(".error, .complete").each(function(){_file=c(this).data("file");if((m.uploads.current>=l.simUploadLimit&&l.simUploadLimit!==0)||(m.uploads.current>=l.uploadLimit&&l.uploadLimit!==0)||(m.uploads.count>=l.uploadLimit&&l.uploadLimit!==0)){return false}if(l.checkScript){_file.checking=true;skipFile=m.checkExists(_file);_file.checking=false;if(!skipFile){m.uploadFile(_file,true)}}else{m.uploadFile(_file,true)}});if(c("#"+l.queueID).find(".uploadifive-queue-item").not(".error, .complete").size()==0){m.queueComplete()}}else{if(m.uploads.current==0){if(c.inArray("onError",l.overrideEvents)<0){if(m.filesToUpload()>0&&l.uploadLimit!=0){alert("The maximum upload limit has been reached.")}}if(typeof l.onError==="function"){l.onError.call(j,"UPLOAD_LIMIT_EXCEEDED",m.filesToUpload())}}}}})},destroy:function(){this.each(function(){var a=c(this),f=a.data("uploadifive"),b=f.settings;d.clearQueue.call(a);if(!b.queueID){c("#"+b.queueID).remove()}a.siblings("input").remove();a.show().insertBefore(f.button);f.button.remove();if(typeof b.onDestroy==="function"){b.onDestroy.call(a)}})}};c.fn.uploadifive=function(a){if(d[a]){return d[a].apply(this,Array.prototype.slice.call(arguments,1))}else{if(typeof a==="object"||!a){return d.init.apply(this,arguments)}else{c.error("The method "+a+" does not exist in $.uploadify")}}}})(jQuery);